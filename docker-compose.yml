version: '3.7'
services:

    #PHP Service
    kigadu-core:
        build:
            context: .
            dockerfile: Dockerfile
        image: kigadu-core
        container_name: kigadu-core
        restart: unless-stopped
        tty: true
        env_file:
            - .env
        environment:
            SERVICE_NAME: kigadu-core
            SERVICE_TAGS: dev
            DB_HOST: mysql
        working_dir: /var/www/html
        volumes:
            - ./docker-configs/php/local.ini:/usr/local/etc/php/conf.d/local.ini
            - ./web/static:/web/static
        depends_on:
            - mysql
        networks:
            - kigadu-network

    #Nginx Service
    webserver:
        image: nginx:alpine
        container_name: webserver
        restart: unless-stopped
        tty: true
        ports:
            - "8081:80"
            - "444:443"
        working_dir: /var/www/html
        volumes:
            - ./:/var/www/html
            - ./docker-configs/nginx/conf.d/:/etc/nginx/conf.d/
            - ./web/static:/web/static
        depends_on:
            - kigadu-core
        networks:
            - kigadu-network

    #MySQL Service
    mysql:
        image: mysql:5.7.22
        container_name: mysql
        restart: unless-stopped
        tty: true
        command: mysqld --init-file="/etc/mysql/init/init.sql"
        ports:
            - "3306:3306"
        environment:
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - mysql:/var/lib/mysql
            - ./docker-configs/mysql/my.cnf:/etc/mysql/my.cnf
            - ./docker-configs/mysql/init.sql:/etc/mysql/init/init.sql
        networks:
            - kigadu-network

#Docker Networks
networks:
    kigadu-network:
        name: kigadu-network
        driver: bridge

#Volumes
volumes:
    mysql:
        driver: local
